{
  "name": "gulp-component",
  "version": "0.1.4",
  "description": "Component build plugin for Gulp",
  "main": "index.js",
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yyx990803/gulp-component.git"
  },
  "bugs": {
    "url": "https://github.com/yyx990803/gulp-component/issues"
  },
  "keywords": [
    "gulp",
    "cli",
    "buildtool",
    "gulpplugin"
  ],
  "author": {
    "name": "Evan You"
  },
  "license": "MIT",
  "dependencies": {
    "component-builder": "~0.10.0",
    "vinyl": "~0.2.0",
    "map-stream": "0.0.4"
  },
  "devDependencies": {
    "should": "~2.1.1",
    "mocha": "~1.16.2"
  },
  "readme": "# gulp-component [![NPM version](https://badge.fury.io/js/gulp-component.png)](http://badge.fury.io/js/gulp-component) [![Build Status](https://travis-ci.org/yyx990803/gulp-component.png?branch=master)](https://travis-ci.org/yyx990803/gulp-component)\n> Component builder plugin for gulp\n\n## Usage\n\n``` js\nvar gulp = require('gulp'),\n    component = require('gulp-component')\n\ngulp.task('component', function () {\n    gulp.src('./component.json')\n        .pipe(component({\n            standalone: true   \n        }))\n        .pipe(gulp.dest('./build'))\n})\n\n// you can trigger rebuild for certain types only when watching:\ngulp.task('watch', function () {\n    gulp.watch('./src/**/*.js', function () {\n        gulp.src('./component.json')\n            .pipe(component.scripts({\n                standalone: true\n            }))\n            .pipe(gulp.dest('./build'))\n    })\n    gulp.watch('./css/**/*.css', function () {\n        gulp.src('./component.json')\n            .pipe(component.styles())\n            .pipe(gulp.dest('./build'))\n    })\n})\n```\n\n## API\n\n### component([options])\n\n- #### options.name\n    Type: `String`  \n    Default: `'build'`\n\n    The filename for built files.\n\n- #### options.only\n    Type: `String` or `Array`  \n    Default: `undefined`\n\n    Build only certain types of assets. Available asset types are: `'scripts'`, `'styles'`, `'images'`, `'fonts'`, `'files'`, `'templates'`, `'json'`. Each of these types has an alias to create a stream that builds that type only, e.g. `component.scripts([options])`\n\n- #### options.configure(builder)\n    Type: `Function`  \n    Default: `undefined`\n\n    A function to add custom configurations to the builder.\n\n- #### options.standalone\n    Type: `Boolean` or `String`  \n    Default: `false`\n\n    Wrap the built js code with a UMD wrapper. If it's a string, it will be used to expose the component on the `this` context.\n\n- #### options.out\n    Type: `String`  \n    Default: `'build'`\n\n    The directory to link/copy assets (`images`, `fonts` and `files`) to.\n\n- #### options.copy\n    Type: `Boolean`  \n    Default: `false`\n\n    Copy assets instead of linking.\n\n- #### options.use\n    Type: `Array`  \n    Default: `undefined`\n\n    An array of plugins/functions to be used by the builder.\n\n- #### options.ignore\n    Type: `Array`  \n    Default: `undefined`\n\n    An array of component dependencies to ignore.\n\n- #### options.dev\n    Type: `Boolean`  \n    Default: `false`\n\n    Include dev dependencies and add source urls.\n\n- #### options.prefix\n    Type: `String`  \n    Default: `undefined`\n\n    Prefix css asset urls.\n\n- #### options.noRequire\n    Type: `Boolean`  \n    Default: `false`\n\n    Exclude require from build. Ignored when `options.standalone` is truthy.\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "_id": "gulp-component@0.1.4",
  "dist": {
    "shasum": "32df7c4ad92931d59f605b70731be4ed7c362d54"
  },
  "_from": "gulp-component@~0.1.3",
  "_resolved": "https://registry.npmjs.org/gulp-component/-/gulp-component-0.1.4.tgz"
}
